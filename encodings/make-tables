#!/usr/bin/perl -w
# $XTermId: make-tables,v 1.2 2013/01/28 00:57:25 tom Exp $
#
# Convert ".enc" files into C code, using that as a fallback when iconv lacks
# information for a given encoding.

our @table_names;

sub trim_enc($) {
	my $name = $_[0];
	$name =~ s/\.enc$//;
	return $name;
}
sub table_name($) {
	my $name = &trim_enc($_[0]);
	$name =~ s/[-.]/_/g;
	return $name;
}

sub do_file($) {
	my $name = $_[0];
	my $n = $#table_names + 1;
	$table_names[$n++] = $name;
	my $table = &table_name($name);
	printf <<EOF;

static const BuiltInMapping $table\[\] =
{
EOF
	open (FP,$name) || die "cannot open $name";
	my(@input) = <FP>;
	close(FP);

	my $ignore = 1;
	my $comment;
	my $source;
	my $target;
	for $n (0..$#input) {
		chomp $input[$n];
		if ( $input[$n] =~ /startmapping\s+unicode/i ) {
			$ignore = 0;
		} elsif ( $input[$n] =~ /endmapping\s+unicode/i ) {
			$ignore = 1;
		}
		my $comment = $input[$n];
		if ( $comment =~ /#/ ) {
			$comment =~ s/^[^#]*#\s*//;
		} else {
			$comment = "";
		}
		if ( $ignore ) {
			printf "\t/* %s */\n", $comment if ( $comment ne "" );
		} elsif ( $input[$n] =~ /^\s*0x[[:xdigit:]]+/i ) {
			$source = $input[$n];
			$source =~ s/#.*//;
			$source =~ s/^\s+//;
			$target = $source;
			$source =~ s/\s+.*//;
			$target =~ s/^[^[:blank:]]+\s+//;
			$target =~ s/\s+.*//;
			if ( $comment ne "" ) {
				printf "\t{%s, %s},\t/* %s */\n", $source, $target, $comment;
			} else {
				printf "\t{%s, %s},\n", $source, $target;
			}
		}
	}

	printf <<EOF;
};
EOF
}

sub begin_file() {
printf <<EOF;
/*
 * \$XTermId\$
 * This file was generated by $0
 */
#include <other.h>
#include <sys.h>
#include <luitconv.h>
EOF
}

sub end_file() {
	my $name;
printf <<EOF;

#define DATA(name) name, SizeOf(name)
const BuiltInCharsetRec builtin_encodings[] =
{
EOF
	for $name ( sort @table_names ) {
		printf "\t{ \"%s\", DATA(%s) },\n", &trim_enc($name), &table_name($name);
	}

printf <<EOF;
	{ 0, 0, 0 }
};
EOF
}

&begin_file;
while ( $#ARGV >= 0 ) {
	&do_file ( shift @ARGV );
}
&end_file;
